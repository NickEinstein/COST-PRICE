{"version":3,"file":"static/js/228.7df5c3e4.chunk.js","mappings":"4TA4KA,UA1JA,SAAwBA,GACtB,MAAsBC,EAAAA,SAAe,IAArC,eAGMC,GAHN,WAGgBC,EAAAA,EAAAA,OAUhB,IAD4BC,EAAAA,EAAAA,MAApBC,gBACoCC,EAAAA,EAAAA,oBAA5C,eAEMC,GAFN,WAEeC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,SAAU,GACVC,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BH,SAAUG,EAAAA,KAAaC,OAAOC,WAC9BJ,SAAUE,EAAAA,KAAaC,OAAOC,aAEhCC,SAAS,WAAD,8BAAE,WAAOC,GAAP,sEACRC,aAAaC,QAAQ,MAAM,GAlB7BjB,EAAQ,cAiBE,2CAAF,mDAAC,MAoBX,OAEE,gBAAKkB,UAAU,mBAAf,UACE,iBAAKA,UAAU,uBAAf,WACE,iBACEA,UAAU,QACVC,MAAO,CACLC,YAAa,GACbC,aAAc,GACdC,SAAU,OALd,WASE,SAAC,IAAD,KACA,iBAAKJ,UAAU,gBAAf,WACE,iBAAKA,UAAU,OAAf,WACE,SAAC,IAAD,CAAYK,QAAQ,KAAKL,UAAU,sBAAnC,8BAGA,cAAGA,UAAU,iCAAb,8FAMF,kBAAMJ,SAAUT,EAAOmB,aAAvB,WACE,iBAAKC,MAAM,QAAX,WACE,SAAC,IAAD,CAAYF,QAAQ,KAAKL,UAAU,OAAnC,4BAGA,SAAC,KAAD,QACEQ,KAAK,SACLR,UAAU,SACVS,YAAY,sBAEZC,KAAK,aACDC,EAAAA,EAAAA,GAAwBxB,EAAQ,kBAIxC,iBAAKa,UAAU,2BAAf,WACE,SAAC,IAAD,CACEA,UAAU,uCACVY,KAAK,SAFP,uBAQA,gBAEEZ,UAAU,kEAFZ,UAIE,iBAAKO,MAAM,+BAAX,WACE,gBACEN,MAAO,CAAEY,OAAQ,qBACjBb,UAAU,qEAFZ,UAIE,SAAC,MAAD,CACEA,UAAU,GACVC,MAAO,CAAEa,SAAU,OAAQC,MAAO,gBAGtC,cAEEd,MAAO,CAAEc,MAAO,WAChBf,UAAU,aAHZ,+CAaZ,iBACEA,UAAU,qFACVC,MAAO,CACLG,SAAU,MACVY,UAAW,OACXC,SAAU,YALd,WAWE,gBACEjB,UAAU,8CACVkB,IAAKC,KAEP,iBAAKnB,UAAU,OAAf,WACE,SAAC,IAAD,CAAYK,QAAQ,KAAKL,UAAU,kBAAnC,mBAGA,SAAC,IAAD,CAAYK,QAAQ,KAAKL,UAAU,kBAAnC,mBAGA,SAAC,IAAD,CAAYK,QAAQ,KAAKL,UAAU,kBAAnC,+BASX,C,sECpKM,SAASW,EAAwBxB,EAAQiC,GAAM,IAAD,UACnD,OAAO,kBACFjC,EAAOkC,cAAcD,IAD1B,IAEEE,QAAQ,UAACnC,EAAOoC,eAAR,QAAC,EAAiBH,OAAS,UAACjC,EAAOqC,cAAR,QAAC,EAAgBJ,IACpDK,aAAa,UAACtC,EAAOoC,eAAR,QAAC,EAAiBH,MAAnB,UAA2BjC,EAAOqC,cAAlC,aAA2B,EAAgBJ,IACvDM,QAAO,UAAEvC,EAAOU,cAAT,aAAE,EAAgBuB,IAE5B,C","sources":["features/login/ForgotPassword.js","utils/FormikUtils.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UserApi from \"apis/UserApi\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nimport { getTextFieldFormikProps } from \"utils/FormikUtils\";\r\nimport LoginHeader from \"common/LoginHeader\";\r\nimport snake from \"images/Mask group.png\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { RiArrowLeftSLine } from \"react-icons/ri\";\r\n\r\nfunction ForgotPassword(props) {\r\n  const [age, setAge] = React.useState(\"\");\r\n \r\n\r\n  const history = useNavigate();\r\n\r\n  const redirect = () => {\r\n\r\n    history(\"/dashboard\");\r\n  };\r\n\r\n\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loginMuation, loginMutationResult] = UserApi.useLoginMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      username: yup.string().trim().required(),\r\n      password: yup.string().trim().required(),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      localStorage.setItem(\"il\", true);\r\n      redirect();\r\n      // history('/dashboard')\r\n\r\n      // try {\r\n      //   const data = await loginMuation({ data: values }).unwrap();\r\n      //   // TODO extra login\r\n      //   // redirect()\r\n      //   enqueueSnackbar(\"Logged in successful\", { variant: \"success\" });\r\n      // } catch (error) {\r\n      //   enqueueSnackbar(error?.data?.message, \"Failed to login\", {\r\n      //     variant: \"error\",\r\n      //   });\r\n      // }\r\n    },\r\n  });\r\n\r\n  \r\n\r\n  return (\r\n   \r\n    <div className=\"  pl-24 h-screen\">\r\n      <div className=\"flex justify-between\">\r\n        <div\r\n          className=\"pt-12\"\r\n          style={{\r\n            paddingLeft: \"\",\r\n            paddingRight: \"\",\r\n            minWidth: \"40%\",\r\n            // maxWidth: \"75%\",\r\n          }}\r\n        >\r\n          <LoginHeader />\r\n          <div className=\"flex-vertical\">\r\n            <div className=\"my-8\">\r\n              <Typography variant=\"h3\" className=\"mb-2 mt-3 font-bold\">\r\n                Forgot Password\r\n              </Typography>\r\n              <p className=\"text-[#7D7878] w-[67%] text-sm\">\r\n                To reset your password, enter your email address, and we'll send\r\n                you a link.\r\n              </p>\r\n            </div>\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <div class=\"mb-12\">\r\n                <Typography variant=\"h6\" className=\"my-2\">\r\n                  Email Address\r\n                </Typography>\r\n                <TextField\r\n                  size=\"medium\"\r\n                  className=\"w-full\"\r\n                  placeholder=\"Enter your username\"\r\n                 \r\n                  name=\"username\"\r\n                  {...getTextFieldFormikProps(formik, \"username\")}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"text-white m-b-30 mt-5  \">\r\n                <Button\r\n                  className=\"p-3 bg-primary-main w-full text-base\"\r\n                  type=\"submit\"\r\n                  // onClick={() => localStorage.setItem('type', 'CLIENT')}\r\n                  // className=' '\r\n                >\r\n                  Continue\r\n                </Button>\r\n                <div\r\n                  //   onClick={handleShow}\r\n                  className=\"flex justify-center items-center mb-2 m-auto cursor-pointer p-2\"\r\n                >\r\n                  <div class=\"w-1/3 mt-4 flex items-center\">\r\n                    <div\r\n                      style={{ border: \"1px solid #494949\" }}\r\n                      className=\"border-solid w-5 mr-2 rounded h-5 flex justify-center items-center\"\r\n                    >\r\n                      <RiArrowLeftSLine\r\n                        className=\"\"\r\n                        style={{ fontSize: \"22px\", color: \"#494949\" }}\r\n                      />\r\n                    </div>\r\n                    <p\r\n                      // onClick={() => setOpen(!open)}\r\n                      style={{ color: \"#494949\" }}\r\n                      className=\"text-base \"\r\n                    >\r\n                      Back to Sign In\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"relative flex-vertical bg-primary-main py-36 text-white pl-10 justify-center w-2/5\"\r\n          style={{\r\n            minWidth: \"40%\",\r\n            minHeight: \"100%\",\r\n            position: \"relative\",\r\n            // backgroundImage: `url(${snake})`,\r\n            // minHeight:\"500px\"\r\n            // backgroundColor: \"green\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"absolute z-0 top-0 left-0 w-[100%] h-[100%]\"\r\n            src={snake}\r\n          />\r\n          <div className=\"z-10\">\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Earn\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Ride\r\n            </Typography>\r\n            <Typography variant=\"h1\" className=\"mt-10 font-bold\">\r\n              Manage.\r\n            </Typography>\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","/**\n * \n * @param {*} formik \n * @param {*} key \n * @returns \n */\nexport function getTextFieldFormikProps(formik, key) {\n  return {\n    ...formik.getFieldProps(key),\n    error: !!formik.touched?.[key] && !!formik.errors?.[key],\n    helperText: !!formik.touched?.[key] && formik.errors?.[key],\n    focused: formik.values?.[key],\n  };\n}\n\nexport function getCheckFieldFormikProps(\n  formik,\n  key,\n  checkedValue = true\n  // unCheckedValue = false\n) {\n  const textFieldProps = getTextFieldFormikProps(formik, key);\n  const value =\n    typeof checkedValue === \"boolean\"\n      ? !!textFieldProps.value\n      : textFieldProps.value;\n  return {\n    ...textFieldProps,\n    value: value,\n    checked: value === checkedValue,\n  };\n  // return {\n  //   checked: !!formik.values[key],\n  //   onChange: (e) => formik.setFieldValue(key, e.target.checked),\n  // };\n}\n"],"names":["props","React","history","useNavigate","useSnackbar","enqueueSnackbar","UserApi","formik","useFormik","initialValues","username","password","validationSchema","yup","trim","required","onSubmit","values","localStorage","setItem","className","style","paddingLeft","paddingRight","minWidth","variant","handleSubmit","class","size","placeholder","name","getTextFieldFormikProps","type","border","fontSize","color","minHeight","position","src","snake","key","getFieldProps","error","touched","errors","helperText","focused"],"sourceRoot":""}